name: Terraform Apply

on:
  workflow_dispatch:

jobs:
  terraform:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v4.1.7

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3.1.1
        with:
          terraform_version: v1.9.0

      - name: Set up SSH keys
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          SSH_PUBLIC_KEY: ${{ secrets.SSH_PUBLIC_KEY }}
          SERVICE_ACCOUNT_KEY_FILE: ${{ secrets.SERVICE_ACCOUNT_KEY_FILE }}
        run: |
          mkdir -p ~/.ssh
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_ed25519
          chmod 600 ~/.ssh/id_ed25519
          echo "$SSH_PUBLIC_KEY" > ~/.ssh/id_ed25519.pub
          chmod 600 ~/.ssh/id_ed25519.pub
          echo "$SERVICE_ACCOUNT_KEY_FILE" > ~/.ssh/authorized_key.json
          chmod 600 ~/.ssh/authorized_key.json

      - name: Initialize Terraform
        env:
          TF_VAR_yc_cloud_id: ${{ secrets.YC_CLOUD_ID }}
          TF_VAR_yc_folder_id: ${{ secrets.YC_FOLDER_ID }}
          TF_VAR_ssh_public_key: ${{ secrets.SSH_PUBLIC_KEY }}
          TF_VAR_yc_service_account_id: ${{ secrets.YC_SERVICE_ACCOUNT_ID }}
          TF_VAR_service_account_key_file_path: ~/.ssh/authorized_key.json
          TF_VAR_ssh_private_key_path: ~/.ssh/id_ed25519
        run: terraform init

      - name: Apply Terraform
        env:
          TF_VAR_yc_cloud_id: ${{ secrets.YC_CLOUD_ID }}
          TF_VAR_yc_folder_id: ${{ secrets.YC_FOLDER_ID }}
          TF_VAR_ssh_public_key: ${{ secrets.SSH_PUBLIC_KEY }}
          TF_VAR_yc_service_account_id: ${{ secrets.YC_SERVICE_ACCOUNT_ID }}
          TF_VAR_service_account_key_file_path: ~/.ssh/authorized_key.json
          TF_VAR_ssh_private_key_path: ~/.ssh/id_ed25519
        run: terraform apply -auto-approve

      - name: Pause for 1 minute
        run: sleep 60

      - name: Generate hosts.yaml
        run: |
          terraform output -json master_external_ips > master_ips.json
          terraform output -json master_internal_ips > master_internal_ips.json
          terraform output -json worker_internal_ips > worker_internal_ips.json
          python3 generate_hosts_yaml.py

      - name: Copy hosts.yaml to remote host
        run: |
          scp -o StrictHostKeyChecking=no -i ~/.ssh/id_ed25519 hosts.yaml ubuntu@$(terraform output -json master_external_ips | jq -r '.[0]'):/home/ubuntu/kubespray/inventory/mycluster/hosts.yaml

      - name: Clean up on failure
        if: failure()
        env:
          TF_VAR_yc_cloud_id: ${{ secrets.YC_CLOUD_ID }}
          TF_VAR_yc_folder_id: ${{ secrets.YC_FOLDER_ID }}
          TF_VAR_ssh_public_key: ${{ secrets.SSH_PUBLIC_KEY }}
          TF_VAR_yc_service_account_id: ${{ secrets.YC_SERVICE_ACCOUNT_ID }}
          TF_VAR_service_account_key_file_path: ~/.ssh/authorized_key.json
          TF_VAR_ssh_private_key_path: ~/.ssh/id_ed25519
          TF_VAR_yc_access_key: ${{ secrets.YC_ACCESS_KEY }}
          TF_VAR_yc_secret_key: ${{ secrets.YC_SECRET_KEY }}
          TF_VAR_tfstate_key: ${{ env.TFSTATE_KEY }}
        run: terraform destroy -auto-approve

      - name: Display Success Message
        if: success()
        run: echo "ВСЕ НОРМАЛЬНО"

      - name: Destroy Infrastructure
        if: always()
        env:
          TF_VAR_yc_cloud_id: ${{ secrets.YC_CLOUD_ID }}
          TF_VAR_yc_folder_id: ${{ secrets.YC_FOLDER_ID }}
          TF_VAR_ssh_public_key: ${{ secrets.SSH_PUBLIC_KEY }}
          TF_VAR_yc_service_account_id: ${{ secrets.YC_SERVICE_ACCOUNT_ID }}
          TF_VAR_service_account_key_file_path: ~/.ssh/authorized_key.json
          TF_VAR_ssh_private_key_path: ~/.ssh/id_ed25519
          TF_VAR_yc_access_key: ${{ secrets.YC_ACCESS_KEY }}
          TF_VAR_yc_secret_key: ${{ secrets.YC_SECRET_KEY }}
          TF_VAR_tfstate_key: ${{ env.TFSTATE_KEY }}
        run: terraform destroy -auto-approve

      - name: Clean up SSH keys
        if: always()
        run: |
          rm -f ~/.ssh/id_ed25519
          rm -f ~/.ssh/id_ed25519.pub
          rm -f ~/.ssh/authorized_key.json
