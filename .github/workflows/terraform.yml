name: Terraform Apply

on:
  workflow_dispatch:

jobs:
  terraform:
    runs-on: ubuntu-22.04
    steps:
    - name: Checkout code
      uses: actions/checkout@v4.1.7

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v3.1.1
      with:
        terraform_version: v1.9.0

    - name: Set up SSH keys
      env:
        SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        SSH_PUBLIC_KEY: ${{ secrets.SSH_PUBLIC_KEY }}
        SERVICE_ACCOUNT_KEY_FILE: ${{ secrets.SERVICE_ACCOUNT_KEY_FILE }}
      run: |
        mkdir -p ~/.ssh
        echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_ed25519
        chmod 600 ~/.ssh/id_ed25519
        echo "$SSH_PUBLIC_KEY" > ~/.ssh/id_ed25519.pub
        chmod 600 ~/.ssh/id_ed25519.pub
        echo "$SERVICE_ACCOUNT_KEY_FILE" > ~/.ssh/authorized_key.json
        chmod 600 ~/.ssh/authorized_key.json

    - name: Initialize Terraform
      env:
        TF_VAR_yc_cloud_id: ${{ secrets.YC_CLOUD_ID }}
        TF_VAR_yc_folder_id: ${{ secrets.YC_FOLDER_ID }}
        TF_VAR_ssh_public_key: ${{ secrets.SSH_PUBLIC_KEY }}
        TF_VAR_service_account_key_file: ~/.ssh/authorized_key.json
        TF_VAR_yc_service_account_id: ${{ secrets.YC_SERVICE_ACCOUNT_ID }}
      run: terraform init

    - name: Apply Terraform
      env:
        TF_VAR_yc_cloud_id: ${{ secrets.YC_CLOUD_ID }}
        TF_VAR_yc_folder_id: ${{ secrets.YC_FOLDER_ID }}
        TF_VAR_ssh_public_key: ${{ secrets.SSH_PUBLIC_KEY }}
        TF_VAR_service_account_key_file: ~/.ssh/authorized_key.json
        TF_VAR_yc_service_account_id: ${{ secrets.YC_SERVICE_ACCOUNT_ID }}
      run: terraform apply -auto-approve

    - name: Install necessary packages
      run: |
         sudo apt-get update -y
         sudo apt install software-properties-common
         sudo add-apt-repository ppa:deadsnakes/ppa -y
         sudo apt-get update -y
         sudo apt-get install git pip python3.11 -y
         sudo -i
         curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py
         python3.11 get-pip.py
         exit

         git clone https://github.com/kubernetes-sigs/kubespray.git
         cd kubespray
         rsync -av kubespray/ /home/runner/work/Diplom-yc/Diplom-yc/
         pip3.11 install -r requirements.txt
         python3.11 -m pip install ruamel.yaml
         cp -rfp inventory/sample inventory/mycluster

    - name: Generate Ansible Inventory
      env:
        TF_VAR_yc_cloud_id: ${{ secrets.YC_CLOUD_ID }}
        TF_VAR_yc_folder_id: ${{ secrets.YC_FOLDER_ID }}
        TF_VAR_ssh_public_key: ${{ secrets.SSH_PUBLIC_KEY }}
        TF_VAR_service_account_key_file: ~/.ssh/authorized_key.json
        TF_VAR_yc_service_account_id: ${{ secrets.YC_SERVICE_ACCOUNT_ID }}
      run: terraform apply -auto-approve

    - name: Display Inventory Directory Contents
      run: |
        ls -la inventory/mycluster/
        ls -la kubespray/
        ls -la 
        pwd
        
    - name: Display Ansible Inventory
      run: cat inventory/mycluster/hosts.yaml

    - name: Run Ansible Playbook
      run: ansible-playbook -i inventory/mycluster/hosts.yaml cluster.yml -b -v

    - name: Clean up on failure
      if: failure()
      env:
        TF_VAR_yc_cloud_id: ${{ secrets.YC_CLOUD_ID }}
        TF_VAR_yc_folder_id: ${{ secrets.YC_FOLDER_ID }}
        TF_VAR_ssh_public_key: ${{ secrets.SSH_PUBLIC_KEY }}
        TF_VAR_service_account_key_file: ~/.ssh/authorized_key.json
        TF_VAR_yc_service_account_id: ${{ secrets.YC_SERVICE_ACCOUNT_ID }}
      run: terraform destroy -auto-approve

    - name: Display Success Message
      if: success()
      run: echo "ВСЕ НОРМАЛЬНО"

    - name: Destroy Infrastructure
      if: always()
      env:
        TF_VAR_yc_cloud_id: ${{ secrets.YC_CLOUD_ID }}
        TF_VAR_yc_folder_id: ${{ secrets.YC_FOLDER_ID }}
        TF_VAR_ssh_public_key: ${{ secrets.SSH_PUBLIC_KEY }}
        TF_VAR_service_account_key_file: ~/.ssh/authorized_key.json
        TF_VAR_yc_service_account_id: ${{ secrets.YC_SERVICE_ACCOUNT_ID }}
      run: terraform destroy -auto-approve

    - name: Clean up SSH keys
      if: always()
      run: |
        rm -f ~/.ssh/id_ed25519
        rm -f ~/.ssh/id_ed25519.pub
        rm -f ~/.ssh/authorized_key.json
